- platform: filter
  name: "multisensor_dining_temp_filtered"
  entity_id: sensor.multisensor_dining_temp
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2

- platform: filter
  name: "door_window_sensor_garage_temp_filtered"
  entity_id: sensor.door_window_sensor_garage_temp
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2

- platform: filter
  name: "door_window_sensor_stairs_closet_temp_filtered"
  entity_id: sensor.door_window_sensor_stairs_closet_temp
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2

- platform: filter
  name: "multisensor_kitchen_temp_filtered"
  entity_id: sensor.multisensor_kitchen_temp
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2

- platform: filter
  name: "multisensor_dining_humidity_filtered"
  entity_id: sensor.multisensor_dining_humidity
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 2

- platform: filter
  name: "door_window_sensor_garage_humidity_filtered"
  entity_id: sensor.door_window_sensor_garage_humidity
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 2

- platform: filter
  name: "door_window_sensor_stairs_closet_humidity_filtered"
  entity_id: sensor.door_window_sensor_stairs_closet_humidity
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 2

- platform: filter
  name: "multisensor_kitchen_humidity_filtered"
  entity_id: sensor.multisensor_kitchen_humidity
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 2

# - platform: unitedenergy
#   username: !secret unitedenergy_username
#   password: !secret unitedenergy_password

- platform: template
  sensors:
    no_lights_on:
      friendly_name: Lights On
      value_template: "{{ states.light|selectattr('state','equalto','on')|selectattr('attributes.tracked_light', 'eq', true)|list|length }}"

- platform: template
  sensors:
    no_external_doors_open:
      friendly_name: External Doors Open
      value_template: "{{ (states.binary_sensor|selectattr('state','equalto','on')|selectattr('attributes.external_door', 'eq', true)|list|length) + (states.sensor|selectattr('state','equalto','255')|selectattr('attributes.external_door', 'eq', true)|list|length)}}"

- platform: template
  sensors:
    excess_solar:
      friendly_name: "Excess Solar Capacity"
      unit_of_measurement: "kWh"
      value_template: "{{ states('sensor.envoy_122327056674_current_power_production') | float - states('sensor.envoy_122327056674_current_power_consumption') | float }}"

- platform: template
  sensors:
    elec_price_per_hour:
      friendly_name: "Electricity Cost Per Hour"
      unit_of_measurement: "$/h"
      value_template: "{{ (float(states('sensor.excess_solar'), 0) * float(states('sensor.jenkins_str_electricity_general_price'), 0) * -1) | round(2) }}"



- platform: template
  sensors:
    ev_charging_cost:
      friendly_name: "EV Charging Cost"
      unit_of_measurement: "$"
      value_template: >-
        {% set battery_capacity_kwh = 60.5 %}
        {% set current_price_per_kwh = states('jenkins_str_electricity_general_price') | float %}
        {% set excess_solar_kwh = states('sensor.excess_solar') | float %}
        {% set current_battery_percentage = states('sensor.chalky_battery') | float / 100 %}

        {% set charging_needed_kwh = battery_capacity_kwh - (battery_capacity_kwh * current_battery_percentage) %}
        {% set charging_needed_kwh_grid = charging_needed_kwh - excess_solar_kwh if charging_needed_kwh - excess_solar_kwh > 0 else 0 %}
        {% set charging_needed_kwh_solar = charging_needed_kwh - charging_needed_kwh_grid %}

        {% set charging_cost_grid = charging_needed_kwh_grid * current_price_per_kwh %}
        {% set charging_cost_solar = charging_needed_kwh_solar * current_price_per_kwh * 0.5 %}

        {% set total_charging_cost = charging_cost_grid + charging_cost_solar %}

        {% if charging_needed_kwh > 0 %}
          {{ total_charging_cost }}
        {% else %}
          0
        {% endif %}
# Moisture grades display on the flower pot icon:
# Humidity range: 4%~0%： Display 0 grid moisture
# Humidity range: 14%~5%：Display 1 grid moisture
# Humidity range: 24%~15%：Display 2 grids moisture
# Humidity range: 34%~25%：Display 3 grids moisture
# Humidity range: 44%~35%：Display 4 grids moisture
# Humidity range: 54%~45%：Display 5 grids moisture
# Humidity range: 64%~55%：Display 6 grids moisture
# Humidity range: 74%~65%：Display 7 grids moisture
# Humidity range: 84%~75%：Display 8 grids moisture
# Humidity range: 94%~85%：Display 9 grids moisture
# Humidity range: 100%~95%：Display 10 grids moisture